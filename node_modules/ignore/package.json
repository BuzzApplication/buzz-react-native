{
  "_args": [
    [
      {
        "raw": "ignore@^4.0.6",
        "scope": null,
        "escapedName": "ignore",
        "name": "ignore",
        "rawSpec": "^4.0.6",
        "spec": ">=4.0.6 <5.0.0",
        "type": "range"
      },
      "/Users/toshikijahja/Buzz/AwesomeProject/node_modules/eslint"
    ]
  ],
  "_from": "ignore@>=4.0.6 <5.0.0",
  "_id": "ignore@4.0.6",
  "_inCache": true,
  "_location": "/ignore",
  "_nodeVersion": "10.8.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/ignore_4.0.6_1534048762397_0.9093604384889431"
  },
  "_npmUser": {
    "name": "kael",
    "email": "i@kael.me"
  },
  "_npmVersion": "6.2.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "ignore@^4.0.6",
    "scope": null,
    "escapedName": "ignore",
    "name": "ignore",
    "rawSpec": "^4.0.6",
    "spec": ">=4.0.6 <5.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/eslint"
  ],
  "_resolved": "https://registry.npmjs.org/ignore/-/ignore-4.0.6.tgz",
  "_shasum": "750e3db5862087b4737ebac8207ffd1ef27b25fc",
  "_shrinkwrap": null,
  "_spec": "ignore@^4.0.6",
  "_where": "/Users/toshikijahja/Buzz/AwesomeProject/node_modules/eslint",
  "author": {
    "name": "kael"
  },
  "bugs": {
    "url": "https://github.com/kaelzhang/node-ignore/issues"
  },
  "dependencies": {},
  "description": "Ignore is a manager and filter for .gitignore rules.",
  "devDependencies": {
    "babel-cli": "^6.26.0",
    "babel-preset-env": "^1.7.0",
    "codecov": "^3.0.4",
    "eslint": "^5.3.0",
    "eslint-config-ostai": "^1.3.2",
    "eslint-plugin-import": "^2.13.0",
    "mkdirp": "^0.5.1",
    "pre-suf": "^1.1.0",
    "rimraf": "^2.6.2",
    "spawn-sync": "^2.0.0",
    "tap": "^12.0.1",
    "tmp": "0.0.33",
    "typescript": "^3.0.1"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-cyFDKrqc/YdcWFniJhzI42+AzS+gNwmUzOSFcRCQYwySuBBBy/KjuxWLZ/FHEH6Moq1NizMOBWyTcv8O4OZIMg==",
    "shasum": "750e3db5862087b4737ebac8207ffd1ef27b25fc",
    "tarball": "https://registry.npmjs.org/ignore/-/ignore-4.0.6.tgz",
    "fileCount": 7,
    "unpackedSize": 37759,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbb7n6CRA9TVsSAnZWagAA+gkP/20VCdu95Or/JwOHxRMx\nkf9Sa3LRjjeUbprdwFUgY/0szFUysXOWaeUNkDAQbifQvBUXg7QJsJ/khvSG\nN4/U7reDQoNyVyTC9NAP9ftYfySy6D6lYNku6qcTI01Kv5Lgka1EitJP65KD\n/UhpZO3gA+BdgZ1w+W6zwwxk2HgilyYVwO2s4Dv9HFwc7VqsiFpMatjqu/TM\nLbbHDH9h2SCKEFV6GC5UmA3GCAGTQFQrU/0LLiMFBvyALieUJ3YixxxEDemo\nIo69n3JkwwtdDo4AQsjVaBP7BO/BAOb3ImspFCnm8QGXV05y1I6Bk/zPSnpm\nCcqS7yKByTLdONlQERKLslsqGVPEs4XMFuYfVxYhRgQtKo1DUwKgcNjNDCbo\nKJSKRaxcwFfuSB9i4gTXhvnuPHbvOpbwPB8BJ1lRz7Tfa+XS+DMcJnF/gxRT\nqYmfZoZ08h/iY17TKR+0X9Ycgirx4hHTI+SZSe9o5OFxrBsjEUz1kbqNQ0Nd\nF9QoZ7rYjJaYQJ5CeFrg327Za3aXpLNcdWVaSVnyYO+pNEmSChpaHS+CarNe\nnTCcyOjSN31fOwaaNryDoUVtsEMMg05XJDotSRf3xNf0o8zAxqqnQcKJSDcB\nqAka3qsIjnB6SZ1BbJ8lSFZpBc3B7tlPSjbsQzcPD4n6lmHqCTT0HyrDNlhA\n+I1a\r\n=lO1t\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">= 4"
  },
  "files": [
    "legacy.js",
    "index.js",
    "index.d.ts",
    "LICENSE-MIT"
  ],
  "gitHead": "56976cef6d5ec0e5651910801669f9aa3daa8120",
  "homepage": "https://github.com/kaelzhang/node-ignore#readme",
  "keywords": [
    "ignore",
    ".gitignore",
    "gitignore",
    "npmignore",
    "rules",
    "manager",
    "filter",
    "regexp",
    "regex",
    "fnmatch",
    "glob",
    "asterisks",
    "regular-expression"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "kael",
      "email": "i@kael.me"
    }
  ],
  "name": "ignore",
  "optionalDependencies": {},
  "readme": "<table><thead>\n  <tr>\n    <th>Linux</th>\n    <th>OS X</th>\n    <th>Windows</th>\n    <th>Coverage</th>\n    <th>Downloads</th>\n  </tr>\n</thead><tbody><tr>\n  <td colspan=\"2\" align=\"center\">\n    <a href=\"https://travis-ci.org/kaelzhang/node-ignore\">\n    <img\n      src=\"https://travis-ci.org/kaelzhang/node-ignore.svg?branch=master\"\n      alt=\"Build Status\" /></a>\n  </td>\n  <td align=\"center\">\n    <a href=\"https://ci.appveyor.com/project/kaelzhang/node-ignore\">\n    <img\n      src=\"https://ci.appveyor.com/api/projects/status/github/kaelzhang/node-ignore?branch=master&svg=true\"\n      alt=\"Windows Build Status\" /></a>\n  </td>\n  <td align=\"center\">\n    <a href=\"https://codecov.io/gh/kaelzhang/node-ignore\">\n    <img\n      src=\"https://codecov.io/gh/kaelzhang/node-ignore/branch/master/graph/badge.svg\"\n      alt=\"Coverage Status\" /></a>\n  </td>\n  <td align=\"center\">\n    <a href=\"https://www.npmjs.org/package/ignore\">\n    <img\n      src=\"http://img.shields.io/npm/dm/ignore.svg\"\n      alt=\"npm module downloads per month\" /></a>\n  </td>\n</tr></tbody></table>\n\n# ignore\n\n`ignore` is a manager, filter and parser which implemented in pure JavaScript according to the .gitignore [spec](http://git-scm.com/docs/gitignore).\n\nPay attention that [`minimatch`](https://www.npmjs.org/package/minimatch) does not work in the gitignore way. To filter filenames according to .gitignore file, I recommend this module.\n\n##### Tested on\n\n- Linux + Node: `0.8` - `7.x`\n- Windows + Node: `0.10` - `7.x`, node < `0.10` is not tested due to the lack of support of appveyor.\n\nActually, `ignore` does not rely on any versions of node specially.\n\nSince `4.0.0`, ignore will no longer support `node < 6` by default, to use in node < 6, `require('ignore/legacy')`. For details, see [CHANGELOG](https://github.com/kaelzhang/node-ignore/blob/master/CHANGELOG.md).\n\n## Table Of Main Contents\n\n- [Usage](#usage)\n- [`Pathname` Conventions](#pathname-conventions)\n- [Guide for 2.x -> 3.x](#upgrade-2x---3x)\n- [Guide for 3.x -> 4.x](#upgrade-3x---4x)\n- See Also:\n  - [`glob-gitignore`](https://www.npmjs.com/package/glob-gitignore) matches files using patterns and filters them according to gitignore rules.\n\n## Usage\n\n```js\nimport ignore from 'ignore'\nconst ig = ignore().add(['.abc/*', '!.abc/d/'])\n```\n\n### Filter the given paths\n\n```js\nconst paths = [\n  '.abc/a.js',    // filtered out\n  '.abc/d/e.js'   // included\n]\n\nig.filter(paths)        // ['.abc/d/e.js']\nig.ignores('.abc/a.js') // true\n```\n\n### As the filter function\n\n```js\npaths.filter(ig.createFilter()); // ['.abc/d/e.js']\n```\n\n### Win32 paths will be handled\n\n```js\nig.filter(['.abc\\\\a.js', '.abc\\\\d\\\\e.js'])\n// if the code above runs on windows, the result will be\n// ['.abc\\\\d\\\\e.js']\n```\n\n## Why another ignore?\n\n- `ignore` is a standalone module, and is much simpler so that it could easy work with other programs, unlike [isaacs](https://npmjs.org/~isaacs)'s [fstream-ignore](https://npmjs.org/package/fstream-ignore) which must work with the modules of the fstream family.\n\n- `ignore` only contains utility methods to filter paths according to the specified ignore rules, so\n  - `ignore` never try to find out ignore rules by traversing directories or fetching from git configurations.\n  - `ignore` don't cares about sub-modules of git projects.\n\n- Exactly according to [gitignore man page](http://git-scm.com/docs/gitignore), fixes some known matching issues of fstream-ignore, such as:\n  - '`/*.js`' should only match '`a.js`', but not '`abc/a.js`'.\n  - '`**/foo`' should match '`foo`' anywhere.\n  - Prevent re-including a file if a parent directory of that file is excluded.\n  - Handle trailing whitespaces:\n    - `'a '`(one space) should not match `'a  '`(two spaces).\n    - `'a \\ '` matches `'a  '`\n  - All test cases are verified with the result of `git check-ignore`.\n\n# Methods\n\n## .add(pattern: string | Ignore): this\n## .add(patterns: Array<string | Ignore>): this\n\n- **pattern** `String | Ignore` An ignore pattern string, or the `Ignore` instance\n- **patterns** `Array<String | Ignore>` Array of ignore patterns.\n\nAdds a rule or several rules to the current manager.\n\nReturns `this`\n\nNotice that a line starting with `'#'`(hash) is treated as a comment. Put a backslash (`'\\'`) in front of the first hash for patterns that begin with a hash, if you want to ignore a file with a hash at the beginning of the filename.\n\n```js\nignore().add('#abc').ignores('#abc')    // false\nignore().add('\\#abc').ignores('#abc')   // true\n```\n\n`pattern` could either be a line of ignore pattern or a string of multiple ignore patterns, which means we could just `ignore().add()` the content of a ignore file:\n\n```js\nignore()\n.add(fs.readFileSync(filenameOfGitignore).toString())\n.filter(filenames)\n```\n\n`pattern` could also be an `ignore` instance, so that we could easily inherit the rules of another `Ignore` instance.\n\n## <strike>.addIgnoreFile(path)</strike>\n\nREMOVED in `3.x` for now.\n\nTo upgrade `ignore@2.x` up to `3.x`, use\n\n```js\nimport fs from 'fs'\n\nif (fs.existsSync(filename)) {\n  ignore().add(fs.readFileSync(filename).toString())\n}\n```\n\ninstead.\n\n## .filter(paths: Array<Pathname>): Array<Pathname>\n\n```ts\ntype Pathname = string\n```\n\nFilters the given array of pathnames, and returns the filtered array.\n\n- **paths** `Array.<Pathname>` The array of `pathname`s to be filtered.\n\n### `Pathname` Conventions:\n\n#### 1. `Pathname` should be a `path.relative()`d pathname\n\n`Pathname` should be a string that have been `path.join()`ed, or the return value of `path.relative()` to the current directory.\n\n```js\n// WRONG\nig.ignores('./abc')\n\n// WRONG, for it will never happen.\n// If the gitignore rule locates at the root directory,\n// `'/abc'` should be changed to `'abc'`.\n// ```\n// path.relative('/', '/abc')  -> 'abc'\n// ```\nig.ignores('/abc')\n\n// Right\nig.ignores('abc')\n\n// Right\nig.ignores(path.join('./abc'))  // path.join('./abc') -> 'abc'\n```\n\nIn other words, each `Pathname` here should be a relative path to the directory of the gitignore rules.\n\nSuppose the dir structure is:\n\n```\n/path/to/your/repo\n    |-- a\n    |   |-- a.js\n    |\n    |-- .b\n    |\n    |-- .c\n         |-- .DS_store\n```\n\nThen the `paths` might be like this:\n\n```js\n[\n  'a/a.js'\n  '.b',\n  '.c/.DS_store'\n]\n```\n\nUsually, you could use [`glob`](http://npmjs.org/package/glob) with `option.mark = true` to fetch the structure of the current directory:\n\n```js\nimport glob from 'glob'\n\nglob('**', {\n  // Adds a / character to directory matches.\n  mark: true\n}, (err, files) => {\n  if (err) {\n    return console.error(err)\n  }\n\n  let filtered = ignore().add(patterns).filter(files)\n  console.log(filtered)\n})\n```\n\n#### 2. filenames and dirnames\n\n`node-ignore` does NO `fs.stat` during path matching, so for the example below:\n\n```js\nig.add('config/')\n\n// `ig` does NOT know if 'config' is a normal file, directory or something\nig.ignores('config')    // And it returns `false`\n\nig.ignores('config/')   // returns `true`\n```\n\nSpecially for people who develop some library based on `node-ignore`, it is important to understand that.\n\n## .ignores(pathname: Pathname): boolean\n\n> new in 3.2.0\n\nReturns `Boolean` whether `pathname` should be ignored.\n\n```js\nig.ignores('.abc/a.js')    // true\n```\n\n## .createFilter()\n\nCreates a filter function which could filter an array of paths with `Array.prototype.filter`.\n\nReturns `function(path)` the filter function.\n\n## `options.ignorecase` since 4.0.0\n\nSimilar as the `core.ignorecase` option of [git-config](https://git-scm.com/docs/git-config), `node-ignore` will be case insensitive if `options.ignorecase` is set to `true` (default value), otherwise case sensitive.\n\n```js\nconst ig = ignore({\n  ignorecase: false\n})\n\nig.add('*.png')\n\nig.ignores('*.PNG')  // false\n```\n\n****\n\n# Upgrade Guide\n\n## Upgrade 2.x -> 3.x\n\n- All `options` of 2.x are unnecessary and removed, so just remove them.\n- `ignore()` instance is no longer an [`EventEmitter`](nodejs.org/api/events.html), and all events are unnecessary and removed.\n- `.addIgnoreFile()` is removed, see the [.addIgnoreFile](#addignorefilepath) section for details.\n\n## Upgrade 3.x -> 4.x\n\nSince `4.0.0`, `ignore` will no longer support node < 6, to use `ignore` in node < 6:\n\n```js\nvar ignore = require('ignore/legacy')\n```\n\n****\n\n# Collaborators\n\n- [@whitecolor](https://github.com/whitecolor) *Alex*\n- [@SamyPesse](https://github.com/SamyPesse) *Samy Pessé*\n- [@azproduction](https://github.com/azproduction) *Mikhail Davydov*\n- [@TrySound](https://github.com/TrySound) *Bogdan Chadkin*\n- [@JanMattner](https://github.com/JanMattner) *Jan Mattner*\n- [@ntwb](https://github.com/ntwb) *Stephen Edgar*\n- [@kasperisager](https://github.com/kasperisager) *Kasper Isager*\n- [@sandersn](https://github.com/sandersn) *Nathan Shively-Sanders*\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/kaelzhang/node-ignore.git"
  },
  "scripts": {
    "build": "babel -o legacy.js index.js",
    "posttest": "tap --coverage-report=html && codecov",
    "prepublish": "npm run build",
    "test": "npm run test-no-cov",
    "test-no-cov": "npm run test:lint && npm run test:tsc && tap test/*.js --coverage",
    "test:git": "tap test/git-check-ignore.js",
    "test:ignore": "tap test/ignore.js --coverage",
    "test:lint": "eslint .",
    "test:tsc": "tsc ./test/ts/simple.ts"
  },
  "version": "4.0.6"
}
